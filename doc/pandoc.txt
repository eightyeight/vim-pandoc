*pandoc.txt* 	For Vim version 7.3 	Last change: 2011 Sep 05

[This document is formatted as a markdown file _and_ as a vim helpfile.
If viewing from within vim, set ft=help to view it as a helpfile, and
set ft=pandoc to view it as a (pandoc) markdown file.]

vim-pandoc: just the syntax
===========================

This fork of [vim-pandoc](https://github.com/vim-pandoc/vim-pandoc) provides
just syntax highlighting for pandoc's markdown dialect.
No fancy extra editing content, just the syntax.

Download and Install
====================

For the latest version, see <https://github.com/eightyeight/vim-pandoc>.

There are many different ways to manage and install vim plugins. Use
your favorite method. If you don't have a favorite method, I recommend
using [Vundle][] or [Pathogen][].

If using Vundle, add

    Bundle 'vim-pandoc/vim-pandoc'

to your `~/.vimrc` file and run `:BundleInstall`.

If using Pathogen,

    cd ~/.vim/bundle
    git clone git@github.com:eightyeight/vim-pandoc.git

If using Pathogen and managing plugins as submodules,

    cd ~/.vim
    git submodule add https://github.com/eightyeight/vim-pandoc.git bundle/vim-pandoc

If you don't want to (or can't) use git, you can download a tarball from
the github page and unzip it into \~/.vim/bundle.

Filetype Detection and File Extensions
======================================

If you have this plugin installed alongside [vim-markdown][], be aware
that both plugins attempt to claim the common markdown extensions for
their own. We match the following extensions:

+    .markdown, .md, .mkd, .pd, .pdk, .pandoc, and .text

In our experience, vim-pandoc trumps vim-markdown.

We do not claim files with the `.txt` extension, since that would seem
a bit presumptuous. If you want `.txt` files to be treated as pandoc
files, add

    au BufNewFile,BufRead *.txt   set filetype=pandoc

to your `.vimrc`.

*pandoc-syntax-highlighting*
============================

The syntax highlighting should be fairly accurate and complete. By
default, the bundle tries to be smart, and only highlight implicit links
if there is a matching link definition. This can be expensive on large
files and slow things down. To disable it, set
g:pandoc_no_empty_implicits:

    let g:pandoc_no_empty_implicits = 1

Due to the way they are handled, span elements (emphasis, bold, tt, subscript
and superscript) can cause slowdowns. If you desire to disable highlighting of
them altogether, set g:pandoc_no_spans:

    let g:pandoc_no_spans = 1

Note that this will also disable highlighting of embedded html, because
otherwise stuff like `<code>` (which is unformatted) is detected as containing
html that doesn't end.

*pandoc-section-folding*
========================

The bundle tells vim to fold documents by section. If you haven't used
folding before, see |fold-commands|.

Folding can slow things down. To disable it, set
g:pandoc_no_folding:

    let g:pandoc_no_folding = 1

* * * *

  [pandoc]: http://johnmacfarlane.net/pandoc/
  [extended markdown]: http://johnmacfarlane.net/pandoc/README.html#pandocs-markdown
  [Vundle]: https://github.com/gmarik/vundle
  [Pathogen]: https://github.com/tpope/vim-pathogen
  [vim-markdown]: http://plasticboy.com/markdown-vim-mode/

 vim:tw=78:ts=8:ft=help:norl: 

